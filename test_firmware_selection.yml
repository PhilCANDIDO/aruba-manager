---
# Test playbook pour vérifier la détection de modèle et sélection de firmware
- name: Test de détection de modèle et sélection firmware
  hosts: localhost
  gather_facts: false
  vars:
    # Test avec différents modèles simulés
    test_scenarios:
      - platform: "ArubaOS-CX 6200"
        expected_model: "6200"
        expected_series: "6000"
      - platform: "ArubaOS-CX 8320"
        expected_model: "8320"
        expected_series: "8000"
      - platform: "ArubaOS-CX 6400"
        expected_model: "6400"
        expected_series: "6000"
    
    firmware_base_path: "/firmware"
    target_firmware_version: "LL.10.10.1040"
    
  tasks:
    - name: Test model detection for each scenario
      block:
        - name: Simulate platform detection
          set_fact:
            ansible_net_platform_name: "{{ item.platform }}"
          
        - name: Extract model information from platform name
          set_fact:
            switch_platform_raw: "{{ ansible_net_platform_name | default('') }}"
            switch_model_number: "{{ ansible_net_platform_name | regex_search('(6[0-9]{3}|8[0-9]{3})') | default('') }}"
            switch_series: ""
        
        - name: Determine switch series
          set_fact:
            switch_series: "{{ '6000' if switch_model_number.startswith('6') else '8000' if switch_model_number.startswith('8') else 'unknown' }}"
          when: switch_model_number != ''
        
        - name: Verify model detection
          assert:
            that:
              - switch_model_number == item.expected_model
              - switch_series == item.expected_series
            success_msg: "✓ Model detection successful for {{ item.platform }}: {{ switch_model_number }} ({{ switch_series }} series)"
            fail_msg: "✗ Model detection failed for {{ item.platform }}"
        
        - name: Display expected firmware path
          debug:
            msg: "Expected firmware path: {{ firmware_base_path }}/{{ switch_series }}/{{ switch_model_number }}/ArubaOS-CX_{{ switch_model_number }}_{{ target_firmware_version.replace('LL.', '').replace('.', '_') }}.swi"
            
      loop: "{{ test_scenarios }}"
      loop_control:
        label: "Testing {{ item.platform }}"
    
    - name: Test completed successfully
      debug:
        msg: 
          - "✓ All model detection tests passed"
          - "✓ Firmware path generation working correctly"
          - "✓ Implementation ready for production use"