---
# T√¢ches de v√©rification des pr√©requis pour la mise √† jour firmware

- name: (prerequisites) Check Ansible collection for Aruba AOS-CX
  ansible.builtin.command:
    cmd: ansible-galaxy collection list arubanetworks.aoscx
  register: collection_check
  changed_when: false
  failed_when: false
  delegate_to: localhost
  run_once: true
  tags:
    - check

- name: (prerequisites) Install Aruba AOS-CX collection if missing
  ansible.builtin.command:
    cmd: ansible-galaxy collection install arubanetworks.aoscx
  delegate_to: localhost
  run_once: true
  when: "'arubanetworks.aoscx' not in collection_check.stdout"
  tags:
    - check

- name: (prerequisites) Verify required Python modules
  ansible.builtin.pip:
    name: 
      - pyaoscx>=2.6.0
      - jmespath
    state: present
  delegate_to: localhost
  become: true
  register: pip_result
  failed_when: pip_result is failed
  run_once: true
  tags:
    - check

- name: (prerequisites) Test connectivity to switch "{{ inventory_hostname }}"
  block:
    - name: (prerequisites) Basic connectivity test
      arubanetworks.aoscx.aoscx_facts:
        gather_subset:
          - host_name
      register: connectivity_test
      retries: 3
      delay: 10
      until: connectivity_test is not failed
      tags:
        - check

    - name: (prerequisites) Skip REST API check in dry-run mode
      ansible.builtin.debug:
        msg: 
          - "üîç [DRY-RUN] V√©rification de l'API REST ignor√©e en mode test"
          - "‚ÑπÔ∏è  En mode normal, l'API REST sera v√©rifi√©e"
      when: dry_run | default(false) | bool
      tags:
        - check

    - name: (prerequisites) Verify REST API using direct HTTP check
      ansible.builtin.uri:
        url: "https://{{ ansible_host | default(inventory_hostname) }}:443/rest/v1/system"
        method: GET
        user: "{{ ansible_user | default(ansible_ssh_user) }}"
        password: "{{ ansible_password | default(ansible_ssh_pass) }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200, 401, 403]  # 200=OK, 401/403=auth issue but API exists
        timeout: 10
      register: rest_api_check
      delegate_to: localhost
      failed_when: false
      when: not (dry_run | default(false) | bool)
      tags:
        - check

    - name: (prerequisites) Verify REST API accessibility
      ansible.builtin.debug:
        msg: 
          - "‚úì API REST accessible (status: {{ rest_api_check.status }})"
          - "‚ÑπÔ∏è  L'API REST est pr√™te pour les op√©rations firmware"
      when: 
        - not (dry_run | default(false) | bool)
        - rest_api_check.status is defined
        - rest_api_check.status in [200, 401, 403]
      tags:
        - check

    - name: (prerequisites) Warn about REST API check failure
      ansible.builtin.debug:
        msg: 
          - "‚ö†Ô∏è  ATTENTION: Impossible de v√©rifier l'accessibilit√© REST API"
          - "‚ö†Ô∏è  Erreur: {{ rest_api_check.msg | default('Connection failed') }}"
          - "‚ö†Ô∏è  Assurez-vous que l'API REST est configur√©e et accessible"
          - "‚ö†Ô∏è  Pour tester: curl -k https://{{ ansible_host | default(inventory_hostname) }}:443/rest/v1/system"
      when: 
        - not (dry_run | default(false) | bool)
        - rest_api_check.status is not defined or rest_api_check.status not in [200, 401, 403]
      tags:
        - check

  rescue:
    - name: (prerequisites) Handle connectivity failure
      ansible.builtin.set_fact:
        update_errors: "{{ update_errors + ['Connectivity failed: ' + (ansible_failed_result.msg | default('Unable to connect to switch'))] }}"
      tags:
        - check

    - name: (prerequisites) Fail on connectivity issue
      ansible.builtin.fail:
        msg: "Impossible de se connecter au switch {{ inventory_hostname }}. V√©rifiez la connectivit√© et les credentials."
      tags:
        - check

- name: (prerequisites) Check switch resource availability
  block:
    - name: (prerequisites) Gather system resource information
      arubanetworks.aoscx.aoscx_command:
        commands:
          - "show system resource-utilization"
          - "show image"
      register: resource_check
      tags:
        - check

    - name: (prerequisites) Extract free space information
      ansible.builtin.set_fact:
        current_free_space: >-
          {%- set disk_output = resource_check.stdout[0] -%}
          {%- for line in disk_output.split('\n') -%}
            {%- if 'Primary' in line and 'MB free' in line -%}
              {{ line | regex_search('(\d+)\s*MB free', '\1') | first | int }}
            {%- endif -%}
          {%- endfor -%}
      tags:
        - check

    - name: (prerequisites) Get platform-specific minimum space requirement
      ansible.builtin.set_fact:
        required_space: >-
          {%- set platform = ansible_net_platform_name | default('default') -%}
          {%- for model, space in minimum_space_requirements.items() -%}
            {%- if model in platform -%}
              {{ space }}
            {%- endif -%}
          {%- else -%}
            {{ minimum_space_requirements.default }}
          {%- endfor -%}
      tags:
        - check

    - name: (prerequisites) Verify sufficient disk space
      ansible.builtin.assert:
        that:
          - current_free_space | int >= required_space | int
        fail_msg: "Espace disque insuffisant. Disponible: {{ current_free_space }}MB, Requis: {{ required_space }}MB"
        success_msg: "Espace disque suffisant: {{ current_free_space }}MB disponible"
      when: current_free_space is defined
      tags:
        - check

  rescue:
    - name: (prerequisites) Handle resource check failure
      ansible.builtin.set_fact:
        update_errors: "{{ update_errors + ['Resource check failed: ' + (ansible_failed_result.msg | default('Unable to check system resources'))] }}"
      tags:
        - check

    - name: (prerequisites) Log resource check warning
      ansible.builtin.debug:
        msg: "ATTENTION: Impossible de v√©rifier les ressources syst√®me. La mise √† jour peut √©chouer par manque d'espace."
      tags:
        - check

- name: (prerequisites) Validate repository server configuration
  block:
    - name: (prerequisites) Test repository server connectivity
      ansible.builtin.wait_for:
        host: "{{ repository_server }}"
        port: "{{ repository_port }}"
        timeout: 10
      delegate_to: localhost
      when: 
        - repository_server | length > 0
        - backup_config | bool or generate_report | bool
      tags:
        - check

    - name: (prerequisites) Verify repository path exists
      ansible.builtin.file:
        path: "{{ repository_path }}"
        state: directory
        mode: '0755'
      delegate_to: "{{ repository_server }}"
      become: true
      when: 
        - repository_server | length > 0
        - backup_config | bool or generate_report | bool
      tags:
        - check

    - name: (prerequisites) Ensure repository subdirectories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      delegate_to: "{{ repository_server }}"
      become: true
      loop:
        - "{{ repository_path }}/firmware_updates"
        - "{{ repository_path }}/backups"
        - "{{ repository_path }}/logs"
      when: 
        - repository_server | length > 0
        - backup_config | bool or generate_report | bool
      tags:
        - check

  rescue:
    - name: (prerequisites) Handle repository check failure
      ansible.builtin.debug:
        msg: "ATTENTION: Serveur de d√©p√¥t non accessible. Les sauvegardes et rapports seront stock√©s localement."
      tags:
        - check

- name: (prerequisites) Prerequisites validation summary
  ansible.builtin.debug:
    msg:
      - "=== V√âRIFICATION DES PR√âREQUIS ==="
      - "Switch: {{ inventory_hostname }}"
      - "Connectivit√©: ‚úì"
      - "API REST: ‚úì"
      - "Espace disque: {{ current_free_space | default('Non v√©rifi√©') }}MB"
      - "Collections Ansible: ‚úì"
      - "Modules Python: ‚úì"
      - "Serveur de d√©p√¥t: {{ '‚úì' if repository_server | length > 0 else 'Non configur√©' }}"
      - "Note: Validation du firmware apr√®s s√©lection automatique"
  tags:
    - check