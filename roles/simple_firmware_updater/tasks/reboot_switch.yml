---
# tasks/reboot_switch.yml - Redémarrage du switch sur la partition primary

- name: "(reboot_switch) Afficher le début du redémarrage"
  ansible.builtin.debug:
    msg: "{{ msg_reboot_started }}"

- name: "(reboot_switch) Sauvegarder l'heure de début du redémarrage"
  ansible.builtin.set_fact:
    reboot_start_time: "{{ ansible_date_time.epoch }}"

- name: "(reboot_switch) Définir la partition de boot sur primary"
  arubanetworks.aoscx.aoscx_boot_firmware:
    partition_name: "primary"
  register: boot_config

- name: "(reboot_switch) Redémarrer le switch"
  arubanetworks.aoscx.aoscx_reboot:
    confirm: true
  async: 10
  poll: 0
  register: reboot_result

- name: "(reboot_switch) Attendre que le switch soit inaccessible"
  ansible.builtin.wait_for:
    host: "{{ ansible_host }}"
    port: 22
    state: stopped
    delay: 10
    timeout: 120
  delegate_to: localhost

- name: "(reboot_switch) Attendre que le switch redémarre complètement"
  ansible.builtin.wait_for:
    host: "{{ ansible_host }}"
    port: 22
    state: started
    delay: 60
    timeout: "{{ reboot_timeout }}"
  delegate_to: localhost

- name: "(reboot_switch) Pause supplémentaire pour stabilisation"
  ansible.builtin.pause:
    seconds: 60
    prompt: "Attente de la stabilisation complète du switch..."

- name: "(reboot_switch) Vérifier la connectivité SSH"
  ansible.builtin.wait_for_connection:
    delay: 10
    timeout: 180

- name: "(reboot_switch) Calculer la durée du redémarrage"
  ansible.builtin.set_fact:
    reboot_duration: "{{ (ansible_date_time.epoch | int) - (reboot_start_time | int) }}"

- name: "(reboot_switch) Afficher la durée du redémarrage"
  ansible.builtin.debug:
    msg: "✓ Switch redémarré avec succès en {{ reboot_duration }} secondes"