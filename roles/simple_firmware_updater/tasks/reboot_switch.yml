---
# tasks/reboot_switch.yml - Redémarrage du switch sur la partition primary

- name: "(reboot_switch) Afficher le début du redémarrage"
  ansible.builtin.debug:
    msg: "{{ msg_reboot_started }}"

- name: "(reboot_switch) Sauvegarder l'heure de début du redémarrage"
  ansible.builtin.set_fact:
    reboot_start_time: "{{ lookup('pipe', 'date +%s') }}"

- name: "(reboot_switch) Configurer le boot sur primary et redémarrer"
  arubanetworks.aoscx.aoscx_boot_firmware:
    partition_name: "primary"
  register: boot_result

- name: "(reboot_switch) Afficher le résultat de la commande boot"
  ansible.builtin.debug:
    var: boot_result

- name: "(reboot_switch) Attendre 1 minute avant de tester l'API"
  ansible.builtin.pause:
    seconds: 60
    prompt: "Attente initiale avant de tester l'API REST..."

- name: "(reboot_switch) Attendre que le switch redémarre (test HTTPS avec code 200)"
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}"
    method: GET
    validate_certs: false
    status_code: 200
    timeout: 30
  delegate_to: localhost
  register: api_result
  until: api_result.status == 200
  retries: 15
  delay: 60

- name: "(reboot_switch) Calculer la durée du redémarrage"
  ansible.builtin.set_fact:
    reboot_duration: "{{ (lookup('pipe', 'date +%s') | int) - (reboot_start_time | int) }}"

- name: "(reboot_switch) Afficher la durée du redémarrage"
  ansible.builtin.debug:
    msg: "✓ Switch redémarré avec succès en {{ reboot_duration }} secondes"