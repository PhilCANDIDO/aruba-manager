---
# tasks/upload_firmware.yml - Upload du firmware sur la partition primary

- name: "(upload_firmware) Afficher le début de l'upload"
  ansible.builtin.debug:
    msg: "{{ msg_upload_started }}"

# === Upload depuis un fichier local ===
- name: "(upload_firmware) Copier le firmware localement depuis le serveur repository"
  ansible.builtin.fetch:
    src: "{{ local_firmware_path }}/{{ firmware_filename }}"
    dest: "/tmp/{{ firmware_filename }}"
    flat: yes
  delegate_to: "{{ repository_server }}"
  when: firmware_source_type == "local"

- name: "(upload_firmware) Upload du firmware depuis le fichier local (wait_firmware_upload: true)"
  arubanetworks.aoscx.aoscx_upload_firmware:
    partition_name: "primary"
    firmware_file_path: "/tmp/{{ firmware_filename }}"
    vrf: "mgmt"
    wait_firmware_upload: true
  register: upload_result_local
  when: firmware_source_type == "local"

# === Upload depuis une URL distante ===
- name: "(upload_firmware) Upload du firmware depuis le serveur HTTP"
  arubanetworks.aoscx.aoscx_upload_firmware:
    partition_name: "primary"
    firmware_file_path: "{{ repository_server }}"
    remote_firmware_file_name: "{{ firmware_filename }}"
    vrf: "mgmt"
    wait_firmware_upload: true
  register: upload_result_remote
  when: firmware_source_type == "remote"

# === Vérification post-upload ===
- name: "(upload_firmware) Définir le résultat d'upload unifié"
  ansible.builtin.set_fact:
    upload_result: "{{ upload_result_local if firmware_source_type == 'local' else upload_result_remote }}"

- name: "(upload_firmware) Vérifier le statut de l'upload"
  ansible.builtin.debug:
    msg:
      - "✓ Upload terminé avec succès"
      - "Partition: primary"
      - "Fichier: {{ firmware_filename }}"
      - "Source: {{ firmware_source_type }}"
  when: upload_result is succeeded

- name: "(upload_firmware) Attendre la fin de l'écriture du firmware"
  ansible.builtin.pause:
    seconds: 30
    prompt: "Attente de la finalisation de l'écriture du firmware..."

- name: "(upload_firmware) Vérifier l'installation du firmware via facts"
  arubanetworks.aoscx.aoscx_facts:
    gather_subset:
      - software_images
  register: images_after_upload

- name: "(upload_firmware) Afficher l'état des partitions après upload"
  ansible.builtin.debug:
    msg: 
      - "État des partitions après upload:"
      - "Primary: {{ images_after_upload.ansible_facts.ansible_net_software_images.primary.version | default('N/A') }}"
      - "Secondary: {{ images_after_upload.ansible_facts.ansible_net_software_images.secondary.version | default('N/A') }}"

# === Nettoyage ===
- name: "(upload_firmware) Nettoyer le fichier temporaire local"
  ansible.builtin.file:
    path: "/tmp/{{ firmware_filename }}"
    state: absent
  delegate_to: localhost
  when: 
    - firmware_source_type == "local"
    - cleanup_server_files | default(true)