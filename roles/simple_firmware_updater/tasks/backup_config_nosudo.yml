---
# tasks/backup_config_nosudo.yml - Version alternative sans sudo sur le serveur repository

- name: "(backup_config) Définir les variables nécessaires"
  ansible.builtin.set_fact:
    backup_filename: "{{ backup_filename | default('config_backup_' + inventory_hostname + '_' + (hostvars['localhost']['global_timestamp'] | default('manual')) + '.cfg') }}"
    remote_temp_dir: "{{ remote_temp_dir | default('/tmp/ansible_simple_firmware') }}"
    repository_server: "{{ repository_server | default(hostvars[inventory_hostname]['repository_server'] | default('s-ansible-1')) }}"
  tags:
    - backup

- name: "(backup_config) Créer le répertoire temporaire local"
  ansible.builtin.file:
    path: "{{ remote_temp_dir }}"
    state: directory
    mode: '0755'
  delegate_to: localhost
  tags:
    - backup

- name: "(backup_config) Sauvegarder la configuration avec aoscx_backup_config"
  arubanetworks.aoscx.aoscx_backup_config:
    config_name: "running-config"
    output_file: "{{ backup_filename }}"
  register: backup_result
  tags:
    - backup

- name: "(backup_config) Vérifier la sauvegarde locale"
  ansible.builtin.stat:
    path: "{{ backup_filename }}"
  register: backup_stat
  delegate_to: localhost
  tags:
    - backup

- name: "(backup_config) Afficher le résumé de la sauvegarde"
  ansible.builtin.debug:
    msg: |
      {{ msg_backup_success | default('Sauvegarde réussie') }}
      Taille: {{ backup_stat.stat.size | default(0) }} bytes
      Fichier local: {{ backup_filename }}
      Note: Pour le transfert vers le serveur repository, exécutez manuellement ou utilisez un utilisateur avec les droits appropriés
  tags:
    - backup